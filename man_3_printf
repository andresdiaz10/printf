.\" Manpage for _printf.
.\" MAN _PRINTF.
.TH _printf 1 "30 07 2021" "1.0" "_printf man page"
.SH NAME
 _printf 
.SH SYNOPSIS
#include <stdarg.h>
#include <stdlib.h>
#include <unistd.h>

int _printf(const char *format, ...);

int read_printf(const char *format, va_list args, buffer_t *strout);

void write_printf(va_list args, buffer_t *strout);

unsigned int (*get_format(const char *format))(va_list, buffer_t *);

unsigned int convert_c(va_list args, buffer_t *strout);

unsigned int convert_s(va_list args, buffer_t *strout);

unsigned int convert_per(va_list args, buffer_t *strout);

unsigned int convert_di(va_list args, buffer_t *strout);

unsigned int _memcpy(buffer_t *strout, const char *src, unsigned int s);

buffer_t *init_buff(void);

void free_buff(buffer_t *strout);
.SH DESCRIPTION
_printf writes output to standard output, the function is written under the control of a format, that specifies how subsequent arguments are converted for output.

Format of the string

Conversion specification is introduced by the character % and ends with a conversion specifier.

s: character string (string)

c: character (char)

d or i: signed integer in base 10 (int)

.SH EXAMPLE
To print a int number:

#include "holberton.h"

_printf("%d",5);

To print a string

_printf("%s", "Holberton");

To print a char:

_printf("%c", 'H');

.SH RETURN VALUE
_printf fuction return the number of character printed (excluding the null byte)

If an output error is encountered, a -1 is returned.
.SH BUGS
When you use the %d format, the number can be displayed backwards.
.SH AUTHOR
Mayi Cadavid and Andres Zapata
